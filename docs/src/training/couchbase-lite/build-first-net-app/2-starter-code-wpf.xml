<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../../../docs.xsd" id="starter-code-wpf">
	<title>Creating the manager and a database</title>
	<description>Create a manager and a database for CouchbaseEvents</description>
	<introduction>
		<paragraph>
			To get started with the CouchbaseEvents app code, you need to add a bit of initial code. After you have the initial code in place, you can build and
			run the app.
		</paragraph>

		<paragraph>
			Every Couchbase Lite application needs a manager object, which manages access to databases. This section
			shows you how to create the manager and a database.
		</paragraph>

		<paragraph>
			When following along, you add all the sample code included in this section to the <code>MainWindow</code> class.
		</paragraph>
	</introduction>

	<tasks>
		
		<task id="initial-code">
			<title>Add initial code</title>
			<body>
				<paragraph>
					The initial code sets up a constant, <code>TAG</code>, for the logging messages that mark the progress of this simple app and outputs some log messages. Add the following statements at the beginning of the <strong>MainWindow</strong>.
				</paragraph>
				<code-block language="C#"><![CDATA[
				public partial class MainWindow : Window
				{
				    const string TAG = "CouchbaseEvents";

				    public MainWindow()
				    {
				        InitializeComponent();

				        Debug.WriteLine("Begin Couchbase Events App", TAG);
				        Debug.WriteLine("End Couchbase Events App", TAG);
				    }
				}
				]]>
				</code-block>
			</body>
		</task>

		<task id="build-run">
			<title>Build and run the app</title>
			<body>
				<paragraph>
					Visual Studio writes the Debug statements to the <strong>Output</strong> window. Build and run the app, and search the <strong>Output</strong> for the string <code>CouchbaseEvents</code> to find the logging messages output by the CouchbaseEvents app as shown below:
				</paragraph>
				<code-block>
				CouchbaseEvents: Begin Couchbase Events App
				CouchbaseEvents: End Couchbase Events App			
				</code-block>	
			</body>
		</task>

		<task id="getting-started">
			<title>Events App</title>
			<body>
				<paragraph>
					We are going to create an events application with Couchbase Lite. The application is based on events users would create, such as ‘party’, or a ‘rock concert’ they wish to attend. The tutorial assumes you are already familiar with WPF adnd .NET.
				</paragraph>
			</body>
		</task>

		<task id="mainwindow-class">
			<title>The MainWindow class</title>
			<body>
				<paragraph>The <code>MainWindow</code> class added by the WPF template is used to invoke the <code>HelloCBL</code> method, which serves as the primary location where Couchbase Lite is called in this tutorial.</paragraph>
				<paragraph>Add code to the <code>MainWindow</code> constructor as shown below:</paragraph>

				<code-block language="C#"><![CDATA[
				public partial class MainWindow : Window
				{
				    const string DB_NAME = "couchbaseevents";
				    const string TAG = "CouchbaseEvents";
				    Database db;

				    public MainWindow()
				    {
				        InitializeComponent();

				        Debug.WriteLine("Begin Couchbase Events App", TAG);
				        HelloCBL();
				        Debug.WriteLine("End Couchbase Events App", TAG);
				    }
				}
				]]>
				</code-block>
			</body>
		</task>
		<task id="create-database">
			<title>Creating the database</title>
			<body>
				<paragraph>Next, add the following implementation of <code>HelloCBL</code>:</paragraph>

				<code-block language="C#"><![CDATA[
		        void HelloCBL()
		        {
		            try
		            {
		                db = Couchbase.Lite.Manager.SharedInstance.GetDatabase(DB_NAME);
		            }
		            catch (Exception e)
		            {
		                Debug.WriteLine("{0}: Error getting database: {1}", TAG, e.Message);
		                return;
		            }
		        }
                ]]>
				</code-block>

				<paragraph>
					The <code>Manager.SharedInstance</code> returns a singleton, top-level object that manages a Couchbase Lite database. We use it here to return a database named "couchbaseevents." The call to <code>GetDatabase</code> will create the database if it does not already exist.
				</paragraph>
			</body>
		</task>

	</tasks>
</lesson>
