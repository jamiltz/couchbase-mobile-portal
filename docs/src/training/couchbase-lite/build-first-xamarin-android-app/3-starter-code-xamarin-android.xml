<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../../../docs.xsd" id="starter-code-xamarin-android">
	<title>Creating the manager and a database</title>
	<description>Create a manager and a database for CouchbaseEvents</description>
	<introduction>
		<paragraph>
			To get started with the CouchbaseEvents app code, you need to add a bit of initial code. After you have the initial code in place, you can build and
			run the app.
		</paragraph>

		<paragraph>
			Every Couchbase Lite application needs a manager object, which manages access to databases. This section
			shows you how to create the manager and a database.
		</paragraph>

		<paragraph>
			When following along, you add all the sample code included in this section to the <code>MainActivity</code> class.
		</paragraph>
	</introduction>

	<tasks>
		
		<task id="initial-code">
			<title>Add initial code</title>
			<body>
				<paragraph>
					The initial code sets up a constant, <code>TAG</code>, for the logging messages that mark the progress of this simple app and outputs some log messages. Add the following statements at the beginning of the <strong>MainActivity</strong>. (Feel free to delete the button click handling code added by Xamarin Studio.)
				</paragraph>
<code-block language="csharp"><![CDATA[
public class MainActivity : Activity
{
	const string TAG = "CouchbaseEvents";

	protected override void OnCreate (Bundle bundle)
	{
		base.OnCreate (bundle);

		Log.Debug (TAG, "Begin Couchbase Events App");
		Log.Debug (TAG, "End Couchbase Events App");

		SetContentView (Resource.Layout.Main);
	}
}
]]>
</code-block>
			</body>
		</task>

		<task id="build-run">
			<title>Build and run the app</title>
			<body>
				<paragraph>
					Xamarin Studio writes logcat output to the <strong>Application Output</strong> pad. Build and run the app, and search the <strong>Application Output</strong> for the string <code>CouchbaseEvents</code> to find the logging messages output by the CouchbaseEvents app as shown below:
				</paragraph>
<code-block>
[CouchbaseEvents] Begin Couchbase Events App
[CouchbaseEvents] End Couchbase Events App				
</code-block>	
			</body>
		</task>

		<task id="getting-started">
			<title>Events App</title>
			<body>
				<paragraph>
					We are going to create an events application with Couchbase Lite. The application is based on events users would create, such as ‘party’, or a ‘rock concert’ they wish to attend. The tutorial assumes you are already familiar with the Android Activity lifecycle methods:
				</paragraph>

				<code-block language="csharp"><![CDATA[
                    OnCreate()
                    OnStart()
                    OnDestroy()
                    OnPause()
                    OnResume()
                    OnRestart()
                    OnStop()
                ]]>
				</code-block>

				<paragraph>
					To learn about the Activity lifecycle, see the <external-ref href="http://developer.xamarin.com/guides/android/application_fundamentals/activity_lifecycle/">Activity Lifecycle article</external-ref> on the Xamarin Developer Center.
				</paragraph>
			</body>
		</task>

		<task id="oncreate-method">
			<title>The OnCreate method</title>
			<body>
				<paragraph>The <code>OnCreate()</code> method is overridden to invoke the <code>HelloCBL</code> method, which serves as the primary location where Couchbase Lite is called in this tutorial.</paragraph>
				<paragraph>Add code to the <code>OnCreate()</code> method as shown below:</paragraph>

<code-block language="csharp"><![CDATA[
const string DB_NAME = "couchbaseevents";
const string TAG = "CouchbaseEvents";

Database db;

protected override void OnCreate (Bundle bundle)
{
	base.OnCreate (bundle);

	Log.Debug (TAG, "Begin Couchbase Events App");
	Log.Debug (TAG, "End Couchbase Events App");

	SetContentView (Resource.Layout.Main);

	HelloBCL ();
}
]]>
</code-block>
			</body>
		</task>
		<task id="create-database">
			<title>Creating the database</title>
			<body>
				<paragraph>Next, add the following implementation of <code>HelloBCL()</code>:</paragraph>

				<code-block language="csharp"><![CDATA[
				void HelloBCL ()
				{
					try {
						db = Manager.SharedInstance.GetDatabase (DB_NAME);
					} catch (Exception e) {
						Log.Error (TAG, "Error getting database", e);
						return;
					}
				}
                ]]>
				</code-block>

				<paragraph>
					The <code>Manager.SharedInstance</code> returns a singleton, top-level object that manages a Couchbase Lite database. We use it here to return a database named "couchbaseevents." The call to <code>GetDatabase</code> will create the database if it does not already exist.
				</paragraph>
			</body>
		</task>

	</tasks>
</lesson>
