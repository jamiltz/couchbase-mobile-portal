<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../../../../../docs.xsd" id="get-changes">
	<title>GET /{db}/_changes</title>
	<description>Retrieve a list of changes</description>
	<introduction><paragraph>This request retrieves a sorted list of changes made to documents in the
			database, in time order of application. Each document appears at most once, ordered by its most recent change, regardless of how many times it's been changed.</paragraph>
		<paragraph>This request can be used to listen for update and modifications to the database for
			post processing or synchronization. A continuously connected changes feed is a reasonable
			approach for generating a real-time log for most applications.</paragraph>
	</introduction>

	<topics>
		<topic id="request">
			<title>Request</title>
			<body><paragraph><strong>Request headers</strong></paragraph>
				<paragraph>This request does not have any required headers.</paragraph>
				<paragraph><strong>Query parameters</strong></paragraph>
				<table>

					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
							<entry>Default</entry>
						</row>
					</header>

					<body>
						<!--<row>
							<entry><code>attachments</code></entry>
							<entry>Boolean</entry>
							<entry>Indicates whether to include the Base64-encoded content of attachments
								in the documents that are included when <code>include_docs</code> is true.
								this parameter is ignored when <code>include_docs</code> is false.</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>att_encoding_info</code></entry>
							<entry>Boolean</entry>
							<entry>Indicates whether to include encoding information in attachment stubs
								when <code>include_docs</code> is true.</entry>
							<entry>false</entry>
						</row>-->
						<row>
							<entry><code>channels</code></entry>
							<entry>String</entry>
							<entry>A comma-separated list of channel names. The response will be filtered to only documents in these channels. (This parameter must be used with the <code>filter</code> parameter; see below.)</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>conflicts</code></entry>
							<entry>Boolean</entry>
							<entry>Includes conflict information in the response. Ignored if <code>include_docs</code>
								isn’t true.</entry>
							<entry>false</entry>
						</row>
						<!--<row>
							<entry><code>descending</code></entry>
							<entry>Boolean</entry>
							<entry>Return the change results in descending sequence order (most recent
								change first).</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>doc_ids</code></entry>
							<entry>array</entry>
							<entry>List of document IDs to filter the changes feed as valid JSON array.
								Used with _doc_ids filter.</entry>
							<entry>none</entry>
						</row>-->
						<row>
							<entry><code>feed</code></entry>
							<entry>string</entry>
							<entry>Specifies type of change feed. Valid values: <code>normal</code>,
								<code>continuous</code>, <code>longpoll</code>,
                                <code>websocket</code></entry>
							<entry><code>normal</code></entry>
						</row>
						<row>
							<entry><code>filter</code></entry>
							<entry>string</entry>
							<entry>Indicates that the documents should be filtered by channel; the
                                <code>channels</code> parameter lists the channels to include. The
                                only valid value is <code>sync_gateway/bychannel</code>. (This is
                                really a boolean parameter; the string value is only for
                                compatibility with CouchDB.)</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>heartbeat</code></entry>
							<entry>integer</entry>
							<entry>Interval in milliseconds at which an empty line (CRLF) is
                                written to the response. This helps prevent gateways from deciding
                                the socket is idle and closing it.
								Only applicable to longpoll or continuous feeds. Overrides any
                                timeout to keep the feed alive indefinitely. Setting to 0 results in no
                                heartbeat.</entry>
							<entry>0</entry>
						</row>
						<row>
							<entry><code>include_docs</code></entry>
							<entry>Boolean</entry>
							<entry>Indicates whether to include the associated document with each result. If
								there are conflicts, only the winning revision is returned.</entry>
							<entry>false</entry>
						</row>
						<!--<row>
							<entry><code>last-event-id</code></entry>
							<entry>integer</entry>
							<entry>Alias for the <code>Last-Event-ID</code> header.</entry>
							<entry>none</entry>
						</row>-->
						<row>
							<entry><code>limit</code></entry>
							<entry>integer</entry>
							<entry>Limits the number of result rows to the specified value. Using a value
								of 0 has the same effect as the value 1.</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>since</code></entry>
							<entry>string</entry>
							<entry>Starts the results from the change immediately after the given sequence
								ID. Sequence IDs should be considered opaque; they come from the
                                <code>last_seq</code> property of a prior response.</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>style</code></entry>
							<entry>string</entry>
							<entry>Number of revisions to return in the <code>changes</code> array.
								<code>main_only</code> returns the current winning revision,
								<code>all_docs</code> returns all leaf revisions including conflicts and
								deleted former conflicts.</entry>
							<entry><code>main_only</code></entry>
						</row>
						<row>
							<entry><code>timeout</code></entry>
							<entry>integer</entry>
							<entry>Maximum period in milliseconds to wait for a change before the response
								is sent, even if there are no results. Only applicable for
								<code>longpoll</code> or <code>continuous</code> feeds. Setting to 0 results in no
								timeout.</entry>
							<entry>60000</entry>
						</row>
						<!--<row>
							<entry><code>view</code></entry>
							<entry>string</entry>
							<entry>Name of a view function to use as a filter</entry>
							<entry>none </entry>
						</row>-->
					</body>
				</table></body>
		</topic>
		<topic id="response">
			<title>Response</title>
			<body><paragraph><strong>Status codes</strong></paragraph>
				<unordered-list>
					<list-item>200 OK – Request completed successfully</list-item>
					<list-item>400 Bad Request – Bad request</list-item>
				</unordered-list>
				<paragraph><strong>Response headers</strong></paragraph>
				<paragraph>This response uses only standard HTTP headers.</paragraph>
				<paragraph><strong>Message body</strong></paragraph>
				<paragraph>The response message body contains a JSON document with the following
					objects;</paragraph>
				<table>

					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
						</row>
					</header>

					<body>
						<row>
							<entry><code>last_seq</code></entry>
							<entry>integer</entry>
							<entry>Last change sequence number</entry>
						</row>
						<row>
							<entry><code>results</code></entry>
							<entry>array</entry>
							<entry>List of changes to the database. See the following table for a list of
								fields in this object.</entry>
						</row>
					</body>
				</table>
				<paragraph>The <code>results</code> array contains the following objects:</paragraph>
				<table>

					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
						</row>
					</header>

					<body>
						<row>
							<entry><code>changes</code></entry>
							<entry>array</entry>
							<entry>List of the document&#8217;s leafs. Each leaf object contains one field,
								<code>rev</code>.</entry>
						</row>
						<row>
							<entry><code>id</code></entry>
							<entry>string</entry>
							<entry>Document identifier</entry>
						</row>
						<row>
							<entry><code>seq</code></entry>
							<entry>integer</entry>
							<entry>Update sequence number</entry>
						</row>
					</body>
				</table></body>
		</topic>
		<topic id="example">
			<title>Example</title>
			<body>
				<paragraph>The following example requests the changes to the database named
					<code>cookbook</code> and specifies that only two rows be included in the
					response:</paragraph>
				<paragraph><strong>Request</strong></paragraph>
<code-block>
GET /cookbook/_changes?limit=2 HTTP/1.1
Host: localhost:59840
</code-block>
				<paragraph><strong>Response</strong></paragraph>
<code-block>
HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: must-revalidate
Content-Type: application/json
Date: Mon, 16 Dec 2013 21:09:35 GMT
Etag: &quot;13&quot;
Server: CouchbaseLite 1.486
Transfer-Encoding: chunked

{
  &quot;results&quot; : [
    {
      &quot;seq&quot; : 1,
      &quot;id&quot; : &quot;A329CFEC-29E8-4DCF-BB49-EFCE8CD6B212&quot;,
      &quot;changes&quot; : [
        {
          &quot;rev&quot; : &quot;1-afbf905396a144446feb2431c37065f9&quot;
        }
      ]
    },
    {
      &quot;seq&quot; : 2,
      &quot;id&quot; : &quot;209BB170-C1E0-473E-B3C4-A4533ACA3CDD&quot;,
      &quot;changes&quot; : [
        {
          &quot;rev&quot; : &quot;1-ed0ebedd2fab89227b352f6455a08010&quot;
        }
      ]
    }
  ],
  &quot;last_seq&quot; : 2
}
</code-block>
			</body>
		</topic>

	</topics>


</article>
