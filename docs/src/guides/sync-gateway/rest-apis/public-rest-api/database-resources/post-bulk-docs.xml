<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../../../../../docs.xsd" id="post-bulk-docs">
	<title>POST /{db}/_bulk_docs</title>
	<description>Add, update, or delete multiple documents to a database</description>
	<introduction>
		<paragraph>This request enables you to add, update, or delete multiple documents to a database
			in a single request.</paragraph>
		<paragraph>To add new documents, you can either specify the ID (<code>_id</code>) or let the software create an
			ID.</paragraph>
		<paragraph>To update existing documents, you must provide the document ID, revision
			identifier (<code>_rev</code>), and new document values.</paragraph>
		<paragraph>To delete existing documents you must provide the document ID, revision identifier,
			and the deletion flag (<code>_deleted</code>).</paragraph>
	</introduction>
	<topics>
		<topic id="request">
			<title>Request</title>
			<body>
				<paragraph><strong>Request headers</strong></paragraph>
				<paragraph>This request does not have any required headers.</paragraph>
				<paragraph><strong>Query parameters</strong></paragraph>
				<paragraph>This request does not use query parameters.</paragraph>
				<paragraph><strong>Message body</strong></paragraph>
				<paragraph>The message body is a JSON document that contains the following
					objects:</paragraph>
				<table>
					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
							<entry>Default</entry>
						</row>
					</header>

					<body>
						<!--<row>
							<entry><code>all_or_nothing</code></entry>
							<entry>Boolean</entry>
							<entry><emphasis>Optional</emphasis>. Indicates whether to use all-or-nothing
								semantics for the database commit mode</entry>
							<entry>false</entry>
						</row>-->
						<row>
							<entry><code>docs</code></entry>
							<entry>array</entry>
							<entry>List containing new or updated documents. Each object in the array can contain
								the following properties: <code>_id</code>, <code>_rev</code>,
								<code>_deleted</code>, and values for new and updated documents.</entry>
							<entry>none</entry>
						</row>

						<row>
							<entry><code>new_edits</code></entry>
							<entry>Boolean</entry>
							<entry><emphasis>Optional</emphasis>. Indicates whether to assign new revision
								identifiers to new edits.</entry>
							<entry>true</entry>
						</row>
					</body>
				</table>
			</body>
		</topic>
		<topic id="response">
			<title>Response</title>
			<body>
				<paragraph><strong>Status codes</strong></paragraph>
				<unordered-list>
					<list-item>201 Created – Document(s) have been created or updated</list-item>
					<list-item>400 Bad Request – The request provided invalid JSON data</list-item>
					<!--<list-item>417 Expectation Failed – Occurs when all_or_nothing option set as true and
						at least one document was rejected by validation function</list-item>-->
				</unordered-list>
				<paragraph><strong>Response headers</strong></paragraph>
				<paragraph>This response uses only standard HTTP headers.</paragraph>
				<paragraph><strong>Message body</strong></paragraph>
				<paragraph>The response message body is a JSON documental that contains an array. Each
					array element contains the following objects:</paragraph>
				<table>

					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
						</row>
					</header>

					<body>
						<row>
							<entry><code>id</code></entry>
							<entry>String</entry>
							<entry>Document identifier</entry>
						</row>
						<row>
							<entry><code>ok</code></entry>
							<entry>Boolean</entry>
							<entry>Indicates whether the operation was successful</entry>
						</row>
						<row>
							<entry><code>rev</code></entry>
							<entry>String</entry>
							<entry>revision identifier</entry>
						</row>
					</body>
				</table>
			</body>
		</topic>
		<topic id="example">
			<title>Example</title>
			<body>
				<paragraph><strong>Request</strong></paragraph>
				<paragraph>The following example adds a new document with the identifier
					<code>PeachCobbler</code>, modifies the document with the identifier
					<code>LemonChicken</code>, and deletes the document with the identifier
					<code>CinnamonCookies</code>.</paragraph>
				<code-block>
POST /cookbook/_bulk_docs
Host: localhost:59840

{
    &quot;docs&quot;: [
        {
            &quot;_id&quot;: &quot;PeachCobbler&quot;,
            &quot;description&quot;: &quot;Juicy peaches topped with pie crust&quot;,
            &quot;title&quot;: &quot;Peach Cobbler&quot;
        },
        {
            &quot;_id&quot;: &quot;LemonChicken&quot;,
            &quot;_rev&quot;: &quot;3-6210945863a15ee7eff1e540133d19da&quot;,
            &quot;description&quot;: &quot;Chinese lemon chicken&quot;,
            &quot;serving-suggestion&quot;: &quot;Serve with plain jasmine rice.&quot;,
            &quot;servings&quot;: 4,
            &quot;title&quot;: &quot;Lemon Chicken&quot;
        },
        {
            &quot;_deleted&quot;: true,
            &quot;_id&quot;: &quot;CinnamonCookies&quot;,
            &quot;_rev&quot;: &quot;1-2c25302ccf3d70d3461f28b8df9fafd0&quot;
        }
    ]
}
</code-block>
				<paragraph><strong>Response</strong></paragraph>
				<code-block>
HTTP/1.1 201 Created
Accept-Ranges: bytes
Content-Type: application/json
Date: Mon, 16 Dec 2013 17:01:56 GMT
Server: CouchbaseLite 1.486
Transfer-Encoding: chunked

[
  {
    &quot;id&quot; : &quot;PeachCobbler&quot;,
    &quot;rev&quot; : &quot;1-eb8eafda1b60edecef37f7daa02baa9e&quot;,
    &quot;ok&quot; : true
  },
  {
    &quot;id&quot; : &quot;LemonChicken&quot;,
    &quot;rev&quot; : &quot;4-51737756120a34de2d4981ab0f02c5a5&quot;,
    &quot;ok&quot; : true
  },
{
    &quot;id&quot; : &quot;CinnamonCookies&quot;,
    &quot;rev&quot; : &quot;2-28df61cdda892ad3dd4339f2bce18463&quot;,
    &quot;ok&quot; : true
  }
]
</code-block>
			</body>
		</topic>

	</topics>

</article>
