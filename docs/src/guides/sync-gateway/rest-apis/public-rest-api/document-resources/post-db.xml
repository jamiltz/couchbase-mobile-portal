<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../../../../../docs.xsd"
         id="post-db">
   <title>POST /{db}</title>
   <description>Create a new document</description>
   <introduction>
      <paragraph>This request creates a new document in the specified database. You can either specify the document ID by including the <code>_id</code> object in the request message body, or let the software generate an ID.</paragraph>
   </introduction>
   <topics>
      <topic id="request">
         <title>Request</title>
         <body>
            <paragraph>
               <strong>Request headers</strong>
            </paragraph>
            <paragraph>The request uses the following headers:</paragraph>
            <unordered-list>
               <list-item>
                  <code>Accept</code>—<emphasis>Optional</emphasis>—Valid values are:

<unordered-list>
                     <list-item>application/json</list-item>
                     <list-item>text/plain</list-item>
                  </unordered-list>
               </list-item>
               <list-item>
                  <code>Content-Type</code>—<emphasis>Required</emphasis>—Must be application/json.</list-item>
            </unordered-list>
            <paragraph>
               <strong>Query parameters</strong>
            </paragraph>
            <paragraph>This request does not use query parameters.</paragraph>
            <!--
            <paragraph>The request uses the following query parameter:</paragraph>
            <table>
               <header>
                  <row>
                     <entry>Name</entry>
                     <entry>Type</entry>
                     <entry>Description</entry>
                     <entry>Default</entry>
                  </row>
               </header>
               <body>
                  <row>
                     <entry>
                        <code>batch</code>
                     </entry>
                     <entry>string</entry>
                     <entry>Stores the document in batch mode. To use, set the value to <code>ok</code>.</entry>
                     <entry>none</entry>
                  </row>
               </body>
            </table>
            -->
         </body>
      </topic>
      <topic id="response">
         <title>Response</title>
         <body>
            <paragraph>The response is a JSON document that contains the following objects:</paragraph>
            <table>
               <header>
                  <row>
                     <entry>Name</entry>
                     <entry>Type</entry>
                     <entry>Description</entry>
                  </row>
               </header>
               <body>
                  <row>
                     <entry>
                        <code>id</code>
                     </entry>
                     <entry>String</entry>
                     <entry>Document identifier</entry>
                  </row>
                  <row>
                     <entry>
                        <code>ok</code>
                     </entry>
                     <entry>Boolean</entry>
                     <entry>Indicates whether the operation was successful</entry>
                  </row>
                  <row>
                     <entry>
                        <code>rev</code>
                     </entry>
                     <entry>String</entry>
                     <entry>revision identifier</entry>
                  </row>
               </body>
            </table>
         </body>
      </topic>
      <topic id="example">
         <title>Example</title>
         <body>
            <paragraph>The following request creates a new document in a database named <code>cookbook</code>.</paragraph>
            <paragraph>
               <strong>Request</strong>
            </paragraph>
            <code-block>
POST /cookbook HTTP/1.1
Host: localhost:59840
Content-Type: application/json

{
    "description": "Chicken topped with mozzarella and parmesan cheese",
    "servings": 4,
    "title": "Chicken Parmagiana"
}
</code-block>
            <paragraph>
               <strong>Response</strong>
            </paragraph>
            <code-block>
HTTP/1.1 201 Created
Accept-Ranges: bytes
Content-Length: 115
Content-Type: application/json
Date: Fri, 13 Dec 2013 01:57:54 GMT
Etag: "1-ed0ebedd2fab89227b352f6455a08010"
Location: http://localhost:59840/cookbook/209BB170-C1E0-473E-B3C4-A4533ACA3CDD
Server: CouchbaseLite 1.486

{
  "id" : "209BB170-C1E0-473E-B3C4-A4533ACA3CDD",
  "rev" : "1-ed0ebedd2fab89227b352f6455a08010",
  "ok" : true
}
</code-block>
            <paragraph>The following example creates a new document with the identifier <code>LemonChicken</code> in a database named <code>cookbook</code>.</paragraph>
            <paragraph>
               <strong>Request</strong>
            </paragraph>
            <code-block>
POST /cookbook
Host: localhost:59840
Content-Type: application/json

{
    "_id": "LemonChicken",
    "description": "Chinese lemon chicken",
    "servings": 4,
    "title": "Lemon Chicken"
}
</code-block>
            <paragraph>
               <strong>Response</strong>
            </paragraph>
            <code-block>

HTTP/1.1 201 Created
Accept-Ranges: bytes
Content-Type: application/json
Date: Fri, 13 Dec 2013 02:31:46 GMT
Etag: "1-78abf9a6508671ba8338e4ef6daa910a"
Location: http://localhost:59840/cookbook/LemonChicken
Server: CouchbaseLite 1.486
Transfer-Encoding: chunked

{
  "id" : "LemonChicken",
  "rev" : "1-78abf9a6508671ba8338e4ef6daa910a",
  "ok" : true
}
</code-block>
         </body>
      </topic>
   </topics>
</article>
