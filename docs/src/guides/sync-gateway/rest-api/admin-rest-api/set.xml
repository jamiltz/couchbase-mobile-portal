<?xml version="1.0" encoding="UTF-8"?>
<set id="admin-rest-api" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Admin REST API</title>
    <description>REST calls made specifically for administrative purposes.</description>
    <introduction>
        <paragraph>There are two sets of REST APIs available for the Sync Gateway. The former we address in the 
      reference guide "REST API". To interact and manage the Couchbase Server Sync Gateway, you can use the Admin APIs that are illustrated in
      this reference article.</paragraph>
      <paragraph>The Admin REST API is a superset of the Sync REST API with the following major extensions:</paragraph>
        <unordered-list>
         <list-item>The capability to view, create, and modify users and roles.</list-item>
         <list-item>The capability to perform management tasks such as creating and deleting databases.</list-item>
         <list-item>The capability to perform administrative tasks without authentication. The Admin REST API operates in superuser
            mode—you can view and modify anything without needing a password or session cookie.</list-item>
        </unordered-list>
        <paragraph>By default, the Admin REST API runs on port 4985 (unless you change the <code>adminInterface</code>
           configuration parameter). <strong>Do not expose this port</strong>—It belongs behind your firewall. Anyone who can reach
           this port has free access to and control over your databases and user accounts.</paragraph>
         <section id="notation-conventions">
             <title>Notation Conventions</title>
             <body>
                <paragraph>Within the paths of the URIs presented in these guides:</paragraph>
                <unordered-list>
                   <list-item>
                      <paragraph>Path segments that start with an underscore character are static components of the URI that you use
                         exactly as given. For example: <code>_replicate</code>.</paragraph>
                   </list-item>
                   <list-item>
                      <paragraph>Path segments that are not preceded by an underscore character represent variables that you replace
                         with your own value. These variables are usually enclosed in brackets as a reminder. For example:
                         <code>{db}</code> or <code>&lt;db&gt;</code>.</paragraph>
                   </list-item>
                </unordered-list>
                <paragraph>For example, suppose you have a database named cookbook. In the database, the IDs for recipes start
                   with the string "recipe" and IDs for design documents start with the string "ddoc". The following table shows
                   examples of values you might use for the URI path in the request that you send to the database:</paragraph>
                <table>
                   <header>
                      <row>
                         <entry>Path</entry>
                         <entry>Sample value</entry>
                      </row>
                   </header>
                   <body>
                      <row>
                         <entry>
                            <code>/&lt;db&gt;</code>
                         </entry>
                         <entry>
                            <code>/cookbook</code>
                         </entry>
                      </row>
                      <row>
                         <entry>
                            <code>/&lt;db&gt;/_session</code>
                         </entry>
                         <entry>
                            <code>/cookbook/_session</code>
                         </entry>
                      </row>
                      <row>
                         <entry>
                            <code>/&lt;db&gt;/_session/&lt;session-id&gt;</code>
                         </entry>
                         <entry>
                            <code>/cookbook/_session/123</code>
                         </entry>
                      </row>
                   </body>
                </table>
             </body>
        </section>
        <section id="admin-rest-api-endpoints">
         <title>Admin REST API Endpoints</title>
         <body>
            <note>In the URL paths shown below, any path component prefixed with a <code>$</code> is a placeholder for a name
               that can vary; for example, <code>$DB</code> refers to the name of the database.</note>
            <paragraph>
               <code>GET /</code> - Returns a JSON object containing information about the server.</paragraph>
            <paragraph>
               <code>GET /_all_dbs</code> - Returns a list of the names of all databases.</paragraph>
          <paragraph>
             <code>/_profile</code> - POST to this endpoint to enable Go CPU profiling, which can be useful for diagnosing
             performance problems. To start profiling, send a JSON body with a <code>file</code> property whose value is a
             path to write the profile to. To stop profiling, send a request without a <code>file</code> property.</paragraph>
          <paragraph>
             <code>PUT /$DB/</code> - Configures a new database. The body of the request contains the database configuration
             as a JSON object ()the same as an entry in the <code>databases</code> property of a configuration file. Note that
             this doesn't create a Couchbase Server bucket—you need to do that before configuring the database.</paragraph>
          <paragraph>
             <code>DELETE /$DB/</code> - Removes (forgets) a database. It doesn't delete the Couchbase Server bucket or any of
             its data, though, so you could bring the database back later with a PUT.</paragraph>
            <paragraph>
               <code>POST /$DB/_compact</code> - Compacts a database by removing obsolete document bodies. Needs to be run
               occasionally.</paragraph>
            <paragraph>
               <code>POST /$DB/_resync</code> - Runs every document in the database through the sync function again, as though
               it had just been updated. This may be necessary after changing the sync function, if the new function will result 
               in different channel assignments and access privileges.</paragraph>
          <paragraph>
             <code>/$DB/_role/$name</code> - represents a role. This API is very similar to <code>_user</code>.</paragraph>
          <paragraph>
             <code>/$DB/_user/$name</code> - represents a user account. It supports GET, PUT, and DELETE, and you can also POST to
             <code>/$DB/_user/</code>. The body is a JSON object; for details see
             the <ref href="../../administration/authenticating-users.xml#authenticating-users">Authentication</ref> page.
             The special user name <code>GUEST</code> applies to unauthenticated requests.</paragraph>
          
          <note type="tip">
            A quick way to tell whether you're talking to the Admin REST API is by sending a <code>GET /</code> request and
             checking whether the resulting object contains an <code>"ADMIN": true</code> property.
            <ref href="../../configuration/config-properties.xml#log-keys">HTTP requests
               logged to the console</ref> show the user name of the requester after the URL. If the request is made on
             the admin port, this is "(ADMIN)" instead.
            </note>
         </body>
        </section>
      </introduction>

    <items>
        <xi:include href="session-resources/guide.xml" />
        <xi:include href="user-resources/guide.xml"/>
     </items>
</set>